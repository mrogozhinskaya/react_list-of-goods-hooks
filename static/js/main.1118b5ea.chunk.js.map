{"version":3,"sources":["App.tsx","components/Good/Good.tsx","index.tsx"],"names":["SORTBY","Good","good","goodsFromServer","App","useState","DEFAULT","sortBy","setSortBy","isReversed","setIsReversed","goods","sortedBy","preparedGoods","sort","goodA","goodB","NAME","localeCompare","LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"6KAMKA,E,0ECDQC,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnC,oBAAI,UAAQ,OAAZ,SACGA,M,SDDAF,K,kBAAAA,E,YAAAA,E,iBAAAA,M,KAME,IAAMG,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+BWC,EAAgB,WAC3B,MAA4BC,mBAASL,EAAOM,SAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA/BiB,SACvBA,EACAC,EACAH,GAEA,IAAII,EAAa,YAAOF,GAoBxB,OAlBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAIJ,IAAaZ,EAAOiB,KACfF,EAAMG,cAAcF,GAGzBJ,IAAaZ,EAAOmB,OACfJ,EAAMK,OAASJ,EAAMI,OAGvB,KAIPX,IACFI,EAAgBA,EAAcQ,WAGzBR,EAMOS,CAAiBnB,EAAiBI,EAAQE,GAOxD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAWP,EAAOiB,OAEhCS,QAAS,kBAAMlB,EAAUR,EAAOiB,OALlC,iCASA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAWP,EAAOmB,SAEhCO,QAAS,kBAAMlB,EAAUR,EAAOmB,SALlC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAahB,IAEfiB,QAAS,kBAAMhB,GAAeD,IALhC,sBAUEF,IAAWP,EAAOM,SAAWG,IAC7B,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAzCI,WACZlB,EAAUR,EAAOM,SACjBI,GAAc,IAoCR,sBAUJ,6BACGC,EAAMgB,KAAI,SAAAzB,GAAI,OAAI,cAAC,EAAD,CAAiBA,KAAMA,GAAZA,YExGtC0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1118b5ea.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { Good } from './components/Good/Good';\n\nenum SORTBY {\n  DEFAULT = 'default',\n  NAME = 'name',\n  LENGTH = 'length',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst getPreparedGoods = (\n  goods: string[],\n  sortedBy: SORTBY,\n  isReversed: boolean,\n): string[] => {\n  let preparedGoods = [...goods];\n\n  if (sortedBy) {\n    preparedGoods.sort((goodA, goodB) => {\n      if (sortedBy === SORTBY.NAME) {\n        return goodA.localeCompare(goodB);\n      }\n\n      if (sortedBy === SORTBY.LENGTH) {\n        return goodA.length - goodB.length;\n      }\n\n      return 0;\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SORTBY.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n  const goods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n\n  const reset = () => {\n    setSortBy(SORTBY.DEFAULT);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SORTBY.NAME,\n          })}\n          onClick={() => setSortBy(SORTBY.NAME)}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SORTBY.LENGTH,\n          })}\n          onClick={() => setSortBy(SORTBY.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy !== SORTBY.DEFAULT || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => <Good key={good} good={good} />)}\n      </ul>\n    </div>\n  );\n};\n","interface Props {\n  good: string;\n  key: string;\n}\n\nexport const Good: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}