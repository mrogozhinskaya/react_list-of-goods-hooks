{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","none","sortMethod","setSortMethod","isReversed","setIsReversed","sortedList","method","preparedGoods","byAlphabetical","sort","good1","good2","localeCompare","byLength","length","getSortedList","handleSort","reverse","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gCAAAA,E,oBAAAA,E,aAAAA,M,KAML,IAmBaE,EAAgB,WAC3B,MAAoCC,mBAASH,EAASI,MAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAtBc,SAACC,GACrB,IAAMC,EAAa,UAAOV,GAE1B,OAAQS,GACN,KAAKV,EAASY,eACZD,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAEF,KAAKf,EAASiB,SACZN,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAO9D,OAAOP,EAMYQ,CAAcd,GAE3Be,EAAa,SAACV,GAClB,OAAQA,GACN,KAAKV,EAASY,eAId,KAAKZ,EAASiB,SACZX,EAAcI,GACd,MAEF,QACEJ,EAAcN,EAASI,QAqB7B,OAJIG,GACFE,EAAWY,UAIX,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMH,EAAWpB,EAASY,iBACnCY,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYpB,IAAeL,EAASY,iBAJxC,iCAUA,wBACEW,QAAS,kBAAMH,EAAWpB,EAASiB,WACnCO,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYpB,IAAeL,EAASiB,WAJxC,4BAUA,wBACEM,QAxCc,WACD,YAAOd,GAEZY,UACdb,GAAeD,IAqCTiB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAalB,IAJjB,qBAUCF,IAAeL,EAASI,MAAQG,EAC/B,wBACEgB,QA5CU,WAClBf,GAAc,GACdF,EAAcN,EAASI,OA2CfoB,KAAK,SACLF,UAAU,4BAHZ,mBAOE,QAGN,6BACGb,EAAWiB,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAAoBA,aC1HrDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aac0dd0f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  byAlphabetical = 'byAlphabetical',\n  byLength = 'byLength',\n  none = 'none',\n}\n\nconst getSortedList = (method: SortType) => {\n  const preparedGoods = [...goodsFromServer];\n\n  switch (method) {\n    case SortType.byAlphabetical:\n      preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.byLength:\n      preparedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortMethod, setSortMethod] = useState(SortType.none);\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedList = getSortedList(sortMethod);\n\n  const handleSort = (method: SortType) => {\n    switch (method) {\n      case SortType.byAlphabetical:\n        setSortMethod(method);\n        break;\n\n      case SortType.byLength:\n        setSortMethod(method);\n        break;\n\n      default:\n        setSortMethod(SortType.none);\n        break;\n    }\n  };\n\n  const handleReverse = () => {\n    const preparedGoods = [...sortedList];\n\n    preparedGoods.reverse();\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortMethod(SortType.none);\n  };\n\n  if (isReversed) {\n    sortedList.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => handleSort(SortType.byAlphabetical)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortMethod !== SortType.byAlphabetical,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => handleSort(SortType.byLength)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortMethod !== SortType.byLength,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={handleReverse}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortMethod !== SortType.none || isReversed ? (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        {sortedList.map(good => (<li data-cy=\"Good\">{good}</li>))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}