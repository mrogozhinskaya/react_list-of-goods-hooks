{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","sortField","setSortField","sortReverse","setSortReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","SORT_BY_NAME","localeCompare","SORT_BY_LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,oBAAAA,E,yBAAAA,M,KAKE,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6BK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EA9BR,SACEC,EACAH,EACAF,GAEA,IAAMM,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAeC,GACjC,OAAQT,GACN,KAAKJ,EAAOc,aACV,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAAOgB,eACV,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAOLS,CAAiBlB,EAAiBK,EAAaF,GAEjD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYlB,IAAcJ,EAAOc,eACrCS,QAAS,WACPlB,EAAaL,EAAOc,eALxB,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYlB,IAAcJ,EAAOgB,iBACrCO,QAAS,WACPlB,EAAaL,EAAOgB,iBALxB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAA4B,IAAhBhB,IAChBiB,QAAS,WACPhB,GAAgBD,IALpB,sBAUEA,GAAeF,IACf,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAa,IACbE,GAAe,IALnB,sBAaJ,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aCvG9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4a0d4ea2.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nenum SortBy {\n  SORT_BY_NAME = 'name',\n  SORT_BY_LENGTH = 'length',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nfunction getPreparedGoods(\n  goods: string[],\n  sortReverse: true | false,\n  sortField: string,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1: string, good2: string) => {\n      switch (sortField) {\n        case SortBy.SORT_BY_NAME:\n          return good1.localeCompare(good2);\n        case SortBy.SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortReverse, setSortReverse] = useState(false);\n  const visibleGoods\n  = getPreparedGoods(goodsFromServer, sortReverse, sortField);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SortBy.SORT_BY_NAME })}\n          onClick={() => {\n            setSortField(SortBy.SORT_BY_NAME);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortBy.SORT_BY_LENGTH })}\n          onClick={() => {\n            setSortField(SortBy.SORT_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': sortReverse !== true })}\n          onClick={() => {\n            setSortReverse(!sortReverse);\n          }}\n        >\n          Reverse\n        </button>\n        {(sortReverse || sortField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setSortReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}